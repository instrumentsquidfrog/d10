def func1(arg1, arg2):
    var5 = class2()
    for var6 in xrange(1):
        var5.func3(var6, arg2)
    def func4(arg7, arg8):
        var9 = func7()
        def func8(arg10, arg11):
            var12 = 264097764 | (arg2 + (1309305735 & arg10 ^ ((((arg1 ^ 304) ^ arg7) & 281 ^ ((arg7 ^ arg8) & ((arg10 & (((arg8 ^ -917) & var9 - 841674141 | arg7) & arg8)) + arg7)) - arg10) & var9 & 385669482))) + -1623385016
            var13 = arg7 + ((arg10 + var12) | 1194038180)
            var14 = 37 - arg7
            result = var12 | var9
            return result
        var15 = func8(arg7, arg2)
        var16 = func11()
        var17 = var15 | arg8 ^ var9
        var18 = var17 ^ var16
        var19 = -298579482 | var15 - arg7 & var16
        var20 = var16 & (var16 - arg2 | arg1)
        var21 = var9 & var15
        var22 = var17 | var20
        var23 = -320 + (var18 | var16)
        var24 = var16 ^ var22
        if arg2 < var9:
            var25 = arg7 & arg8
        else:
            var25 = (var21 + (var24 & var16)) - var22
        var26 = (var15 - arg1 + var23) & arg2
        result = arg1 | ((var19 + var17) | (var24 ^ (((arg7 | var23) | (((var18 & 1266941038) | var17) | var18)) + arg8) ^ var23))
        return result
    var27 = func4(arg1, arg2)
    result = arg2 | 63
    return result
def func11():
    func9()
    result = len(range(27))
    func10()
    return result
def func10():
    global len
    del len
def func9():
    global len
    len = lambda x : 9
def func7():
    func5()
    result = len(range(9))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : 1
class class2(object):
    def func3(self, arg3, arg4):
        result = ((arg4 | -1390989893) | arg3) & arg4
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 28'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in xrange(1):
        var5.func3(var6, arg2)
    def func4(arg7, arg8):
        var9 = func7()
        def func8(arg10, arg11):
            var12 = 264097764 | (arg2 + (1309305735 & arg10 ^ ((((arg1 ^ 304) ^ arg7) & 281 ^ ((arg7 ^ arg8) & ((arg10 & (((arg8 ^ -917) & var9 - 841674141 | arg7) & arg8)) + arg7)) - arg10) & var9 & 385669482))) + -1623385016
            var13 = arg7 + ((arg10 + var12) | 1194038180)
            var14 = 37 - arg7
            result = var12 | var9
            return result
        var15 = func8(arg7, arg2)
        var16 = func11()
        var17 = var15 | arg8 ^ var9
        var18 = var17 ^ var16
        var19 = -298579482 | var15 - arg7 & var16
        var20 = var16 & (var16 - arg2 | arg1)
        var21 = var9 & var15
        var22 = var17 | var20
        var23 = -320 + (var18 | var16)
        var24 = var16 ^ var22
        if arg2 < var9:
            var25 = arg7 & arg8
        else:
            var25 = (var21 + (var24 & var16)) - var22
        var26 = (var15 - arg1 + var23) & arg2
        result = arg1 | ((var19 + var17) | (var24 ^ (((arg7 | var23) | (((var18 & 1266941038) | var17) | var18)) + arg8) ^ var23))
        return result
    var27 = func4(arg1, arg2)
    result = arg2 | 63
    return result
def func11():
    func9()
    result = len(range(27))
    func10()
    return result
def func10():
    global len
    del len
def func9():
    global len
    len = lambda x : 9
def func7():
    func5()
    result = len(range(9))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : 1
class class2(object):
    def func3(self, arg3, arg4):
        result = ((arg4 | -1390989893) | arg3) & arg4
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 28'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in xrange(1):
        var5.func3(var6, arg2)
    def func4(arg7, arg8):
        var9 = func7()
        def func8(arg10, arg11):
            var12 = 264097764 | (arg2 + (1309305735 & arg10 ^ ((((arg1 ^ 304) ^ arg7) & 281 ^ ((arg7 ^ arg8) & ((arg10 & (((arg8 ^ -917) & var9 - 841674141 | arg7) & arg8)) + arg7)) - arg10) & var9 & 385669482))) + -1623385016
            var13 = arg7 + ((arg10 + var12) | 1194038180)
            var14 = 37 - arg7
            result = var12 | var9
            return result
        var15 = func8(arg7, arg2)
        var16 = func11()
        var17 = var15 | arg8 ^ var9
        var18 = var17 ^ var16
        var19 = -298579482 | var15 - arg7 & var16
        var20 = var16 & (var16 - arg2 | arg1)
        var21 = var9 & var15
        var22 = var17 | var20
        var23 = -320 + (var18 | var16)
        var24 = var16 ^ var22
        if arg2 < var9:
            var25 = arg7 & arg8
        else:
            var25 = (var21 + (var24 & var16)) - var22
        var26 = (var15 - arg1 + var23) & arg2
        result = arg1 | ((var19 + var17) | (var24 ^ (((arg7 | var23) | (((var18 & 1266941038) | var17) | var18)) + arg8) ^ var23))
        return result
    var27 = func4(arg1, arg2)
    result = arg2 | 63
    return result
def func11():
    func9()
    result = len(range(27))
    func10()
    return result
def func10():
    global len
    del len
def func9():
    global len
    len = lambda x : 9
def func7():
    func5()
    result = len(range(9))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : 1
class class2(object):
    def func3(self, arg3, arg4):
        result = ((arg4 | -1390989893) | arg3) & arg4
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 28'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in xrange(1):
        var5.func3(var6, arg2)
    def func4(arg7, arg8):
        var9 = func7()
        def func8(arg10, arg11):
            var12 = 264097764 | (arg2 + (1309305735 & arg10 ^ ((((arg1 ^ 304) ^ arg7) & 281 ^ ((arg7 ^ arg8) & ((arg10 & (((arg8 ^ -917) & var9 - 841674141 | arg7) & arg8)) + arg7)) - arg10) & var9 & 385669482))) + -1623385016
            var13 = arg7 + ((arg10 + var12) | 1194038180)
            var14 = 37 - arg7
            result = var12 | var9
            return result
        var15 = func8(arg7, arg2)
        var16 = func11()
        var17 = var15 | arg8 ^ var9
        var18 = var17 ^ var16
        var19 = -298579482 | var15 - arg7 & var16
        var20 = var16 & (var16 - arg2 | arg1)
        var21 = var9 & var15
        var22 = var17 | var20
        var23 = -320 + (var18 | var16)
        var24 = var16 ^ var22
        if arg2 < var9:
            var25 = arg7 & arg8
        else:
            var25 = (var21 + (var24 & var16)) - var22
        var26 = (var15 - arg1 + var23) & arg2
        result = arg1 | ((var19 + var17) | (var24 ^ (((arg7 | var23) | (((var18 & 1266941038) | var17) | var18)) + arg8) ^ var23))
        return result
    var27 = func4(arg1, arg2)
    result = arg2 | 63
    return result
def func11():
    func9()
    result = len(range(27))
    func10()
    return result
def func10():
    global len
    del len
def func9():
    global len
    len = lambda x : 9
def func7():
    func5()
    result = len(range(9))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : 1
class class2(object):
    def func3(self, arg3, arg4):
        result = ((arg4 | -1390989893) | arg3) & arg4
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 28'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in xrange(1):
        var5.func3(var6, arg2)
    def func4(arg7, arg8):
        var9 = func7()
        def func8(arg10, arg11):
            var12 = 264097764 | (arg2 + (1309305735 & arg10 ^ ((((arg1 ^ 304) ^ arg7) & 281 ^ ((arg7 ^ arg8) & ((arg10 & (((arg8 ^ -917) & var9 - 841674141 | arg7) & arg8)) + arg7)) - arg10) & var9 & 385669482))) + -1623385016
            var13 = arg7 + ((arg10 + var12) | 1194038180)
            var14 = 37 - arg7
            result = var12 | var9
            return result
        var15 = func8(arg7, arg2)
        var16 = func11()
        var17 = var15 | arg8 ^ var9
        var18 = var17 ^ var16
        var19 = -298579482 | var15 - arg7 & var16
        var20 = var16 & (var16 - arg2 | arg1)
        var21 = var9 & var15
        var22 = var17 | var20
        var23 = -320 + (var18 | var16)
        var24 = var16 ^ var22
        if arg2 < var9:
            var25 = arg7 & arg8
        else:
            var25 = (var21 + (var24 & var16)) - var22
        var26 = (var15 - arg1 + var23) & arg2
        result = arg1 | ((var19 + var17) | (var24 ^ (((arg7 | var23) | (((var18 & 1266941038) | var17) | var18)) + arg8) ^ var23))
        return result
    var27 = func4(arg1, arg2)
    result = arg2 | 63
    return result
def func11():
    func9()
    result = len(range(27))
    func10()
    return result
def func10():
    global len
    del len
def func9():
    global len
    len = lambda x : 9
def func7():
    func5()
    result = len(range(9))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : 1
class class2(object):
    def func3(self, arg3, arg4):
        result = ((arg4 | -1390989893) | arg3) & arg4
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 28'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in xrange(1):
        var5.func3(var6, arg2)
    def func4(arg7, arg8):
        var9 = func7()
        def func8(arg10, arg11):
            var12 = 264097764 | (arg2 + (1309305735 & arg10 ^ ((((arg1 ^ 304) ^ arg7) & 281 ^ ((arg7 ^ arg8) & ((arg10 & (((arg8 ^ -917) & var9 - 841674141 | arg7) & arg8)) + arg7)) - arg10) & var9 & 385669482))) + -1623385016
            var13 = arg7 + ((arg10 + var12) | 1194038180)
            var14 = 37 - arg7
            result = var12 | var9
            return result
        var15 = func8(arg7, arg2)
        var16 = func11()
        var17 = var15 | arg8 ^ var9
        var18 = var17 ^ var16
        var19 = -298579482 | var15 - arg7 & var16
        var20 = var16 & (var16 - arg2 | arg1)
        var21 = var9 & var15
        var22 = var17 | var20
        var23 = -320 + (var18 | var16)
        var24 = var16 ^ var22
        if arg2 < var9:
            var25 = arg7 & arg8
        else:
            var25 = (var21 + (var24 & var16)) - var22
        var26 = (var15 - arg1 + var23) & arg2
        result = arg1 | ((var19 + var17) | (var24 ^ (((arg7 | var23) | (((var18 & 1266941038) | var17) | var18)) + arg8) ^ var23))
        return result
    var27 = func4(arg1, arg2)
    result = arg2 | 63
    return result
def func11():
    func9()
    result = len(range(27))
    func10()
    return result
def func10():
    global len
    del len
def func9():
    global len
    len = lambda x : 9
def func7():
    func5()
    result = len(range(9))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : 1
class class2(object):
    def func3(self, arg3, arg4):
        result = ((arg4 | -1390989893) | arg3) & arg4
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 28'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in xrange(1):
        var5.func3(var6, arg2)
    def func4(arg7, arg8):
        var9 = func7()
        def func8(arg10, arg11):
            var12 = 264097764 | (arg2 + (1309305735 & arg10 ^ ((((arg1 ^ 304) ^ arg7) & 281 ^ ((arg7 ^ arg8) & ((arg10 & (((arg8 ^ -917) & var9 - 841674141 | arg7) & arg8)) + arg7)) - arg10) & var9 & 385669482))) + -1623385016
            var13 = arg7 + ((arg10 + var12) | 1194038180)
            var14 = 37 - arg7
            result = var12 | var9
            return result
        var15 = func8(arg7, arg2)
        var16 = func11()
        var17 = var15 | arg8 ^ var9
        var18 = var17 ^ var16
        var19 = -298579482 | var15 - arg7 & var16
        var20 = var16 & (var16 - arg2 | arg1)
        var21 = var9 & var15
        var22 = var17 | var20
        var23 = -320 + (var18 | var16)
        var24 = var16 ^ var22
        if arg2 < var9:
            var25 = arg7 & arg8
        else:
            var25 = (var21 + (var24 & var16)) - var22
        var26 = (var15 - arg1 + var23) & arg2
        result = arg1 | ((var19 + var17) | (var24 ^ (((arg7 | var23) | (((var18 & 1266941038) | var17) | var18)) + arg8) ^ var23))
        return result
    var27 = func4(arg1, arg2)
    result = arg2 | 63
    return result
def func11():
    func9()
    result = len(range(27))
    func10()
    return result
def func10():
    global len
    del len
def func9():
    global len
    len = lambda x : 9
def func7():
    func5()
    result = len(range(9))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : 1
class class2(object):
    def func3(self, arg3, arg4):
        result = ((arg4 | -1390989893) | arg3) & arg4
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 28'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in xrange(1):
        var5.func3(var6, arg2)
    def func4(arg7, arg8):
        var9 = func7()
        def func8(arg10, arg11):
            var12 = 264097764 | (arg2 + (1309305735 & arg10 ^ ((((arg1 ^ 304) ^ arg7) & 281 ^ ((arg7 ^ arg8) & ((arg10 & (((arg8 ^ -917) & var9 - 841674141 | arg7) & arg8)) + arg7)) - arg10) & var9 & 385669482))) + -1623385016
            var13 = arg7 + ((arg10 + var12) | 1194038180)
            var14 = 37 - arg7
            result = var12 | var9
            return result
        var15 = func8(arg7, arg2)
        var16 = func11()
        var17 = var15 | arg8 ^ var9
        var18 = var17 ^ var16
        var19 = -298579482 | var15 - arg7 & var16
        var20 = var16 & (var16 - arg2 | arg1)
        var21 = var9 & var15
        var22 = var17 | var20
        var23 = -320 + (var18 | var16)
        var24 = var16 ^ var22
        if arg2 < var9:
            var25 = arg7 & arg8
        else:
            var25 = (var21 + (var24 & var16)) - var22
        var26 = (var15 - arg1 + var23) & arg2
        result = arg1 | ((var19 + var17) | (var24 ^ (((arg7 | var23) | (((var18 & 1266941038) | var17) | var18)) + arg8) ^ var23))
        return result
    var27 = func4(arg1, arg2)
    result = arg2 | 63
    return result
def func11():
    func9()
    result = len(range(27))
    func10()
    return result
def func10():
    global len
    del len
def func9():
    global len
    len = lambda x : 9
def func7():
    func5()
    result = len(range(9))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : 1
class class2(object):
    def func3(self, arg3, arg4):
        result = ((arg4 | -1390989893) | arg3) & arg4
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 28'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in xrange(1):
        var5.func3(var6, arg2)
    def func4(arg7, arg8):
        var9 = func7()
        def func8(arg10, arg11):
            var12 = 264097764 | (arg2 + (1309305735 & arg10 ^ ((((arg1 ^ 304) ^ arg7) & 281 ^ ((arg7 ^ arg8) & ((arg10 & (((arg8 ^ -917) & var9 - 841674141 | arg7) & arg8)) + arg7)) - arg10) & var9 & 385669482))) + -1623385016
            var13 = arg7 + ((arg10 + var12) | 1194038180)
            var14 = 37 - arg7
            result = var12 | var9
            return result
        var15 = func8(arg7, arg2)
        var16 = func11()
        var17 = var15 | arg8 ^ var9
        var18 = var17 ^ var16
        var19 = -298579482 | var15 - arg7 & var16
        var20 = var16 & (var16 - arg2 | arg1)
        var21 = var9 & var15
        var22 = var17 | var20
        var23 = -320 + (var18 | var16)
        var24 = var16 ^ var22
        if arg2 < var9:
            var25 = arg7 & arg8
        else:
            var25 = (var21 + (var24 & var16)) - var22
        var26 = (var15 - arg1 + var23) & arg2
        result = arg1 | ((var19 + var17) | (var24 ^ (((arg7 | var23) | (((var18 & 1266941038) | var17) | var18)) + arg8) ^ var23))
        return result
    var27 = func4(arg1, arg2)
    result = arg2 | 63
    return result
def func11():
    func9()
    result = len(range(27))
    func10()
    return result
def func10():
    global len
    del len
def func9():
    global len
    len = lambda x : 9
def func7():
    func5()
    result = len(range(9))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : 1
class class2(object):
    def func3(self, arg3, arg4):
        result = ((arg4 | -1390989893) | arg3) & arg4
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 28'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in xrange(1):
        var5.func3(var6, arg2)
    def func4(arg7, arg8):
        var9 = func7()
        def func8(arg10, arg11):
            var12 = 264097764 | (arg2 + (1309305735 & arg10 ^ ((((arg1 ^ 304) ^ arg7) & 281 ^ ((arg7 ^ arg8) & ((arg10 & (((arg8 ^ -917) & var9 - 841674141 | arg7) & arg8)) + arg7)) - arg10) & var9 & 385669482))) + -1623385016
            var13 = arg7 + ((arg10 + var12) | 1194038180)
            var14 = 37 - arg7
            result = var12 | var9
            return result
        var15 = func8(arg7, arg2)
        var16 = func11()
        var17 = var15 | arg8 ^ var9
        var18 = var17 ^ var16
        var19 = -298579482 | var15 - arg7 & var16
        var20 = var16 & (var16 - arg2 | arg1)
        var21 = var9 & var15
        var22 = var17 | var20
        var23 = -320 + (var18 | var16)
        var24 = var16 ^ var22
        if arg2 < var9:
            var25 = arg7 & arg8
        else:
            var25 = (var21 + (var24 & var16)) - var22
        var26 = (var15 - arg1 + var23) & arg2
        result = arg1 | ((var19 + var17) | (var24 ^ (((arg7 | var23) | (((var18 & 1266941038) | var17) | var18)) + arg8) ^ var23))
        return result
    var27 = func4(arg1, arg2)
    result = arg2 | 63
    return result
def func11():
    func9()
    result = len(range(27))
    func10()
    return result
def func10():
    global len
    del len
def func9():
    global len
    len = lambda x : 9
def func7():
    func5()
    result = len(range(9))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : 1
class class2(object):
    def func3(self, arg3, arg4):
        result = ((arg4 | -1390989893) | arg3) & arg4
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 28'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in xrange(1):
        var5.func3(var6, arg2)
    def func4(arg7, arg8):
        var9 = func7()
        def func8(arg10, arg11):
            var12 = 264097764 | (arg2 + (1309305735 & arg10 ^ ((((arg1 ^ 304) ^ arg7) & 281 ^ ((arg7 ^ arg8) & ((arg10 & (((arg8 ^ -917) & var9 - 841674141 | arg7) & arg8)) + arg7)) - arg10) & var9 & 385669482))) + -1623385016
            var13 = arg7 + ((arg10 + var12) | 1194038180)
            var14 = 37 - arg7
            result = var12 | var9
            return result
        var15 = func8(arg7, arg2)
        var16 = func11()
        var17 = var15 | arg8 ^ var9
        var18 = var17 ^ var16
        var19 = -298579482 | var15 - arg7 & var16
        var20 = var16 & (var16 - arg2 | arg1)
        var21 = var9 & var15
        var22 = var17 | var20
        var23 = -320 + (var18 | var16)
        var24 = var16 ^ var22
        if arg2 < var9:
            var25 = arg7 & arg8
        else:
            var25 = (var21 + (var24 & var16)) - var22
        var26 = (var15 - arg1 + var23) & arg2
        result = arg1 | ((var19 + var17) | (var24 ^ (((arg7 | var23) | (((var18 & 1266941038) | var17) | var18)) + arg8) ^ var23))
        return result
    var27 = func4(arg1, arg2)
    result = arg2 | 63
    return result
def func11():
    func9()
    result = len(range(27))
    func10()
    return result
def func10():
    global len
    del len
def func9():
    global len
    len = lambda x : 9
def func7():
    func5()
    result = len(range(9))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : 1
class class2(object):
    def func3(self, arg3, arg4):
        result = ((arg4 | -1390989893) | arg3) & arg4
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 28'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in xrange(1):
        var5.func3(var6, arg2)
    def func4(arg7, arg8):
        var9 = func7()
        def func8(arg10, arg11):
            var12 = 264097764 | (arg2 + (1309305735 & arg10 ^ ((((arg1 ^ 304) ^ arg7) & 281 ^ ((arg7 ^ arg8) & ((arg10 & (((arg8 ^ -917) & var9 - 841674141 | arg7) & arg8)) + arg7)) - arg10) & var9 & 385669482))) + -1623385016
            var13 = arg7 + ((arg10 + var12) | 1194038180)
            var14 = 37 - arg7
            result = var12 | var9
            return result
        var15 = func8(arg7, arg2)
        var16 = func11()
        var17 = var15 | arg8 ^ var9
        var18 = var17 ^ var16
        var19 = -298579482 | var15 - arg7 & var16
        var20 = var16 & (var16 - arg2 | arg1)
        var21 = var9 & var15
        var22 = var17 | var20
        var23 = -320 + (var18 | var16)
        var24 = var16 ^ var22
        if arg2 < var9:
            var25 = arg7 & arg8
        else:
            var25 = (var21 + (var24 & var16)) - var22
        var26 = (var15 - arg1 + var23) & arg2
        result = arg1 | ((var19 + var17) | (var24 ^ (((arg7 | var23) | (((var18 & 1266941038) | var17) | var18)) + arg8) ^ var23))
        return result
    var27 = func4(arg1, arg2)
    result = arg2 | 63
    return result
def func11():
    func9()
    result = len(range(27))
    func10()
    return result
def func10():
    global len
    del len
def func9():
    global len
    len = lambda x : 9
def func7():
    func5()
    result = len(range(9))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : 1
class class2(object):
    def func3(self, arg3, arg4):
        result = ((arg4 | -1390989893) | arg3) & arg4
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 28'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in xrange(1):
        var5.func3(var6, arg2)
    def func4(arg7, arg8):
        var9 = func7()
        def func8(arg10, arg11):
            var12 = 264097764 | (arg2 + (1309305735 & arg10 ^ ((((arg1 ^ 304) ^ arg7) & 281 ^ ((arg7 ^ arg8) & ((arg10 & (((arg8 ^ -917) & var9 - 841674141 | arg7) & arg8)) + arg7)) - arg10) & var9 & 385669482))) + -1623385016
            var13 = arg7 + ((arg10 + var12) | 1194038180)
            var14 = 37 - arg7
            result = var12 | var9
            return result
        var15 = func8(arg7, arg2)
        var16 = func11()
        var17 = var15 | arg8 ^ var9
        var18 = var17 ^ var16
        var19 = -298579482 | var15 - arg7 & var16
        var20 = var16 & (var16 - arg2 | arg1)
        var21 = var9 & var15
        var22 = var17 | var20
        var23 = -320 + (var18 | var16)
        var24 = var16 ^ var22
        if arg2 < var9:
            var25 = arg7 & arg8
        else:
            var25 = (var21 + (var24 & var16)) - var22
        var26 = (var15 - arg1 + var23) & arg2
        result = arg1 | ((var19 + var17) | (var24 ^ (((arg7 | var23) | (((var18 & 1266941038) | var17) | var18)) + arg8) ^ var23))
        return result
    var27 = func4(arg1, arg2)
    result = arg2 | 63
    return result
def func11():
    func9()
    result = len(range(27))
    func10()
    return result
def func10():
    global len
    del len
def func9():
    global len
    len = lambda x : 9
def func7():
    func5()
    result = len(range(9))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : 1
class class2(object):
    def func3(self, arg3, arg4):
        result = ((arg4 | -1390989893) | arg3) & arg4
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 28'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
